name: Build Prod

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build, tag, and push image to Dockerhub
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t docker.io/${{ vars.DOCKERHUB_ACCOUNT }}/${{ vars.MKDOCS_APP_NAME }}:$IMAGE_TAG -f dockerfiles/mkdocs/Dockerfile .
          docker push docker.io/${{ vars.DOCKERHUB_ACCOUNT }}/${{ vars.MKDOCS_APP_NAME }}:$IMAGE_TAG

  deployment:
    name: Deploy
    needs: [ build ]
    runs-on: 'ubuntu-latest'
    environment: prod
    steps:
      - uses: actions/checkout@v1
      - name: Setup cloudflared
        run: |
          set -x
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb
      - name: Create SSH Config
        uses: benoitchantre/setup-ssh-authentication-action@1.0.1
        with:
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          private-key-name: oci_private_key
          ssh-config: ${{ vars.SSH_CONFIG }}
      - name: Setup SSH Config
        run: |
          sed -i "s/SSH_CF_ACCESS_CLIENT_ID/${{ secrets.CF_ACCESS_CLIENT_ID }}/" ~/.ssh/config
          sed -i "s/SSH_CF_ACCESS_CLIENT_SECRET/${{ secrets.CF_ACCESS_CLIENT_SECRET }}/" ~/.ssh/config
          cat ~/.ssh/config
      - name: Deploy
        env:
          IMAGE_TAG: ${{ github.sha }}
          DOCKERHUB_ACCOUNT: ${{ vars.DOCKERHUB_ACCOUNT }}
          MKDOCS_APP_NAME: ${{ vars.MKDOCS_APP_NAME }}
        run: |
          ./scripts/deploy.sh
