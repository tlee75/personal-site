name: Build Prod

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build, tag, and push image to Dockerhub
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t docker.io/${{ vars.DOCKERHUB_ACCOUNT }}/${{ vars.MKDOCS_APP_NAME }}:$IMAGE_TAG -f dockerfiles/mkdocs/Dockerfile .
          docker push docker.io/${{ vars.DOCKERHUB_ACCOUNT }}/${{ vars.MKDOCS_APP_NAME }}:$IMAGE_TAG

  deployment:
    name: Deploy
    needs: [ build ]
    runs-on: 'ubuntu-latest'
    environment: prod
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Install cloudflared
        run: |
          set -x
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb
      - name: Create SSH Private Key
        uses: benoitchantre/setup-ssh-authentication-action@1.0.1
        with:
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          private-key-name: oci_private_key
      - name: Install Ansible
        run: |
          sudo apt update -y
          sudo apt install software-properties-common -y
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible -y
      - name: Deploy
        run: |
          cat ./ansible/inventory/nodes.yml
          ansible-playbook ./ansible/playbooks/deploy_prod.yml \
            --inventory ./ansible/inventory/nodes.yml \
            --limit node1 \
            --extra-vars "IMAGE_TAG=${{ github.sha }} \
            --extra-vars "DOCKERHUB_ACCOUNT=${{ vars.DOCKERHUB_ACCOUNT }} \
            --extra-vars "MKDOCS_APP_NAME=${{ vars.MKDOCS_APP_NAME }}" \
            --extra-vars "CF_ACCESS_CLIENT_ID=${{ secrets.CF_ACCESS_CLIENT_ID }}" \
            --extra-vars "CF_ACCESS_CLIENT_SECRET=${{ secrets.CF_ACCESS_CLIENT_SECRET }}" \
            --key-file ~/.ssh/oci_private_key \
            --verbose
