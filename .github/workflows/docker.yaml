name: Docker Build

on: [push]

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: showcase-api
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./image
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deployment:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v1
      - name: Setup Env
        run: |
          set -x
          ls -lah
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          helm version
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client
          sudo apt install cl-base64 -y
          ls -lah
          echo ${{ secrets.KUBE_CONFIG }}
          echo "test"
          cho ${{ secrets.KUBE_CONFIG }} | base64 -d
          echo "test2"
          echo ${{ secrets.KUBE_CONFIG }} | base64 -d > ./kubeconfig
          ls -lah
          export KUBECONFIG=./kubeconfig
          env
          ls
          kubectl config get-contexts
          kubectl get ns
      - name: Deploy
        run: |
          ./scripts/deploy-app.sh